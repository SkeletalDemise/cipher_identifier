import itertools

from statistical_tests.utils import convert_string

# initialize sdd table
d = "03420010004526020443060035" + "00006000090700000000700070"
d += "30002006008000605000300000"
d += "16001000440000000001004010"
d += "00450000030032036540043800"
d += "30000500210000500204100000"
d += "20001006100000200100200000"
d += "50007000500000000000000000"
d += "00500040001137000053050008"
d += "00006000000000500000900000"
d += "00006000500004000000001000"
d += "20042000300700000000000070"
d += "55005000200000260000200060"
d += "00470080022000003004000000"
d += "02000800004055020400745000"
d += "30003000000500570600300000"
d += "00000000000000000000900000"
d += "10004000204000200000000050"
d += "11000001200000144014204000"
d += "00000008300000300000002000"
d += "04300050000623060653000006"
d += "00008000400000000000000000"
d += "60002006600000200000000000"
d += "30701000200000090005000600"
d += "16200200060020621021006000"
d += "20008000060100000000000009"
sdd = [None] * 26
for i in range(26):
    sdd[i] = [0] * 26
for index, (i, j) in enumerate(itertools.product(range(26), range(26))):
    sdd[i][j] = int(d[index])


def get_sdd(dat):
    dat = convert_string(dat)
    score = 0
    l = len(dat) - 1
    for i in range(l):
        if dat[i] > 25 or dat[i + 1] > 25:
            continue
        score += sdd[dat[i]][dat[i + 1]]
    score *= 100
    score /= l
    return score
